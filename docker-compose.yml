version: "3.7"
services:
  db:
    container_name: "wc_db"
    image: postgres:15.3-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=weather_collector
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  alembic_migrations:
    container_name: "wc_alembic_migrations"
    image: wc_alembic_migrations
    command: ./alembic_upgrade.sh
    environment:
      ALEMBIC_DATABASE_URL: "postgresql://postgres:postgres@db/weather_collector"
    build:
      context: .
      dockerfile: alembic.dockerfile
    depends_on:
      - db


  app_init:
    container_name: "wc_app_init"
    image: wc_app_init
    environment:
      DB_URL: "postgresql+asyncpg://postgres:postgres@db/weather_collector"
      OXILOR_API_KEY: "arRcNuwfAkEtjdesIT4_3e4mbdJ249"
    build:
      context: .
      dockerfile: init.dockerfile
    depends_on:
      - alembic_migrations

  app_collect:
    container_name: "wc_app_collect"
    image: wc_app_collect
    environment:
      DB_URL: "postgresql+asyncpg://postgres:postgres@db/weather_collector"
      OPENWEATHER_API_KEY: "b9b9fe45509f0497d07232d844b22aeb"
    build:
      context: .
      dockerfile: collect.dockerfile
    depends_on:
      - app_init
#      - alembic_migrations

  app_visual:
    container_name: "wc_app_visual"
    image: wc_app_visual
    environment:
      DB_URL: "postgresql+asyncpg://postgres:postgres@db/weather_collector"
    build:
      context: .
      dockerfile: visual.dockerfile
    ports:
      - "8550:8550"
    depends_on:
      - app_collect
#      - alembic_migrations
volumes:
  db-data: